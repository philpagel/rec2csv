; Configuration for UNI-T UDP3305S and UDP3305S-E lab power supplies
;
; Latest version is available on gitHub:
;
; https://github.com/philpagel/udp3305s
;
; If you find a problem or have an idea for improvement, please open an issue
; there.
;
; Currently implemented:
;   * Socket, LXI and RS232 connections (USB uses TMC which is unsupported)
;   * Works with both S and S-E models (no difference in handling at this point)
;   * Channels 1-3 as well as serial and parallel modes
;   * Set and activate OCP/OVP
;   * Read voltage and current (set and measured) on all channels
;   * Channel on/off
;
; Known issues:
;   * generic interface does not support on/off for SER and PARA combined channels

#author phil phil@techbotch.org

#metadef
#idString Uni-Trend,UDP3305S
#name Uni-T UDP3305S
#handle UDP3305S
#replaceText CH1_COLOR (102,255,255)
#replaceText CH2_COLOR (255,255,102)
#replaceText CH3_COLOR (255,102,255)
#replaceText SER_COLOR (102,255,102)
#replaceText PAR_COLOR (102,255,102)
#replaceText CH1_MaxVoltage 33
#replaceText CH1_MaxCurrent 5.2
#replaceText CH2_MaxVoltage 33
#replaceText CH2_MaxCurrent 5.2
#replaceText CH3_MaxVoltage 6.2
#replaceText CH3_MaxCurrent 3.2
#replaceText SER_MaxVoltage 66
#replaceText SER_MaxCurrent 5.2
#replaceText PAR_MaxVoltage 33
#replaceText PAR_MaxCurrent 10.4

#metadef
#idString Uni-Trend,UDP3305S-E
#name Uni-T UDP3305SE
#handle UDP3305SE
#replaceText CH1_COLOR (51,204,255)
#replaceText CH2_COLOR (255,255,102)
#replaceText CH3_COLOR (204,153,255)
#replaceText SER_COLOR (102,255,102)
#replaceText PAR_COLOR (102,255,102)
#replaceText CH1_MaxVoltage 33
#replaceText CH1_MaxCurrent 5.2
#replaceText CH2_MaxVoltage 33
#replaceText CH2_MaxCurrent 5.2
#replaceText CH3_MaxVoltage 6.2
#replaceText CH3_MaxCurrent 3.2
#replaceText SER_MaxVoltage 66
#replaceText SER_MaxCurrent 5.2
#replaceText PAR_MaxVoltage 33
#replaceText PAR_MaxCurrent 10.4

#meta
#idString Uni-Trend UDP3305
#name UNI-T UDP3305
#handle UDP3305
#port 5025 LXI com
#baudrate 9600

; ************************************************************************
#notes
* Autodetection does not work for LAN connection. Please enter the IP address
  manually.
* RS232 is set to 9600 baud - make sure the instrument is set accordingly or
  change config.


#initCmd SYST:LOCK ON
#finalCmd SYST:LOCK OFF;OUTPUT:STATE ALL,OFF
#prepareSample 
#askValues MEAS:VOLT? CH1;MEAS:CURR? CH1;MEAS:POWE? CH1;SOUR1:VOLT?;SOUR1:CURR?; MEAS:VOLT? CH2;MEAS:CURR? CH2;MEAS:POWE? CH2;SOUR2:VOLT?;SOUR2:CURR?; MEAS:VOLT? CH3;MEAS:CURR? CH3;MEAS:POWE? CH3;SOUR3:VOLT?;SOUR3:CURR?; MEAS:VOLT? SER;MEAS:CURR? SER;MEAS:POWE? SER;SOUR5:VOLT?;SOUR5:CURR?; MEAS:VOLT? PARA;MEAS:CURR? PARA;MEAS:POWE? PARA;SOUR6:VOLT?;SOUR6:CURR?
#outputOff OUTPUT:STATE ALL,OFF
#modeChangeDelay 3

#value CH1_Voltage V D3
#value CH1_Current A D3
#value CH1_Power W D3
#value CH1_VoltageSet V D3
#value CH1_CurrentSet A D3
#value CH2_Voltage V D3
#value CH2_Current A D3
#value CH2_Power W D3
#value CH2_VoltageSet V D3
#value CH2_CurrentSet A D3
#value CH3_Voltage V D3
#value CH3_Current A D3
#value CH3_Power W D3
#value CH3_VoltageSet V D3
#value CH3_CurrentSet A D3
#value SER_Voltage V D3
#value SER_Current A D3
#value SER_Power W D3
#value SER_VoltageSet V D3
#value SER_CurrentSet A D3
#value PARA_Voltage V D3
#value PARA_Current A D3
#value PARA_Power W D3
#value PARA_VoltageSet V D3
#value PARA_CurrentSet A D3



; *******************************
; Setup Menu
; *******************************

#cmdSetup radio Output_Mode 
:read: SOURce:Mode?
:string:
:write: SOURCE:Mode # 
:updatedelayed: 0.5
Normal NORMAL
Serial SER
Parallel PARA


; ********** Output ********  

#cmdSetup checkbox Output_Ch1 Output
:enable: Output_Mode=="NORMAL"
:read: OUTPUT:STATE? CH1
:write: OUTPUT:STATE CH1,#
:string:
:bgcolor: CH1_COLOR
:updatealloff:
On OFF ON

#cmdSetup checkbox Output_Ch2 Output
:enable: Output_Mode=="NORMAL"
:read: OUTPUT:STATE? CH2
:write: OUTPUT:STATE CH2,#
:string:
:bgcolor: CH2_COLOR
:updatealloff:
On OFF ON

#cmdSetup checkbox Output_Ch3 Output
:read: OUTPUT:STATE? CH3
:write: OUTPUT:STATE CH3,#
:string:
:bgcolor: CH3_COLOR
:updatealloff:
On OFF ON

#cmdSetup checkbox Output_Serial Output
:enable: Output_Mode=="SER"
:read: OUTPUT:STATE? SER
:write: OUTPUT:STATE SER,#
:string:
:bgcolor: SER_COLOR
:updatealloff:
On OFF ON

#cmdSetup checkbox Output_Parallel Output
:enable: Output_Mode=="PARA"
:read: OUTPUT:STATE? PARA
:write: OUTPUT:STATE PARA,#
:string:
:bgcolor: PAR_COLOR
:updatealloff:
On OFF ON


; ********** Channel 1 ********  

#cmdSetup radio Volt Ch_1
:enable: Output_Mode=="NORMAL"
:read: APPLy? CH1,VOLT
:readmath: getElement(value,1, ",")
:write: APPLY Ch1,#V
:tip: Shortcuts for common voltages
1.8V 1.8
3.3V 3.3
5V 5
12V 12
24V 24

#cmdSetup number Volt Ch_1
:enable: Output_Mode=="NORMAL"
:read: APPLy? CH1,VOLT
:readmath: getElement(value,1, ",")
:write: APPLY Ch1,#V
V 0 CH1_MaxVoltage

#cmdSetup number Current Ch_1
:enable: Output_Mode=="NORMAL"
:read: APPLy? CH1,CURRENT
:readmath: getElement(value,1, ",")
:write: APPLY Ch1,#A
A 0 CH1_MaxCurrent

#cmdSetup number OVP_value Ch_1
:enable: Output_Mode=="NORMAL"
:read: OUTPUT:OVP:VALUE?
:write: OUTPUT:OVP:VALUE CH1,#
:tip: Over voltage protection
V 0 CH1_MaxVoltage

#cmdSetup number OCP_value Ch_1
:enable: Output_Mode=="NORMAL"
:read: OUTPUT:OCP:VALUE? CH1
:write: OUTPUT:OCP:VALUE CH1,#
:tip: Over current protection
A 0 CH1_MaxCurrent

#cmdSetup checkbox OVP_state Ch_1
:enable: Output_Mode=="NORMAL"
:read: OUTPut:OVP:STATe? CH1
:write: OUTPut:OVP:STATe CH1, #
:string:
On OFF ON

#cmdSetup checkbox OCP_state Ch_1
:enable: Output_Mode=="NORMAL"
:read: OUTPut:OCP:STATe? CH1
:write: OUTPut:OCP:STATe CH1, #
:string:
On OFF ON

; ********** Channel 2 ********  

#cmdSetup radio Volt Ch_2
:enable: Output_Mode=="NORMAL"
:read: APPLy? CH2,VOLT
:readmath: getElement(value,1, ",")
:write: APPLY Ch2,#V
:tip: Shortcuts for common voltages
1.8V 1.8
3.3V 3.3
5V 5
12V 12
24V 24

#cmdSetup number Volt Ch_2
:enable: Output_Mode=="NORMAL"
:read: APPLy? CH2,VOLT
:readmath: getElement(value,1, ",")
:write: APPLY Ch2,#V
V 0 CH2_MaxVoltage

#cmdSetup number Current Ch_2
:enable: Output_Mode=="NORMAL"
:read: APPLy? CH2,CURRENT
:readmath: getElement(value,1, ",")
:write: APPLY Ch2,#A
A 0 CH2_MaxCurrent

#cmdSetup number OVP_value Ch_2
:enable: Output_Mode=="NORMAL"
:read: OUTPUT:OVP:VALUE? CH2
:write: OUTPUT:OVP:VALUE CH2,#
:tip: Over voltage protection
V 0 CH2_MaxVoltage

#cmdSetup number OCP_value Ch_2
:enable: Output_Mode=="NORMAL"
:read: OUTPUT:OCP:VALUE? CH2
:write: OUTPUT:OCP:VALUE CH2,#
:tip: Over current protection
A 0 CH2_MaxCurrent

#cmdSetup checkbox OVP_state Ch_2
:enable: Output_Mode=="NORMAL"
:read: OUTPut:OVP:STATe? CH2
:write: OUTPut:OVP:STATe CH2, #
:string:
On OFF ON

#cmdSetup checkbox OCP_state Ch_2
:enable: Output_Mode=="NORMAL"
:read: OUTPut:OCP:STATe? CH2
:write: OUTPut:OCP:STATe CH2, #
:string:
On OFF ON

; ********** Channel 3 ********  

#cmdSetup radio Volt Ch_3
:read: APPLy? CH3,VOLT
:readmath: getElement(value,1, ",")
:write: APPLY Ch3,#V
:tip: Shortcuts for common voltages
1.8V 1.8
3.3V 3.3
5V 5

#cmdSetup number Volt Ch_3
:read: APPLy? CH3,VOLT
:readmath: getElement(value,1, ",")
:write: APPLY Ch3,#V
V 0 CH3_MaxVoltage

#cmdSetup number Current Ch_3
:read: APPLy? CH3,CURRENT
:readmath: getElement(value,1, ",")
:write: APPLY Ch3,#A
A 0 CH3_MaxCurrent

#cmdSetup number OVP_value Ch_3
:read: OUTPUT:OVP:VALUE? CH3
:write: OUTPUT:OVP:VALUE CH3,#
:tip: Over voltage protection
V 0 CH3_MaxVoltage

#cmdSetup number OCP_value Ch_3
:read: OUTPUT:OCP:VALUE? CH3
:write:OUTPUT:OCP:VALUE CH3,#
:tip: Over current protection
A 0 CH3_MaxCurrent

#cmdSetup checkbox OVP_state Ch_3
:read: OUTPut:OVP:STATe? CH3
:write: OUTPut:OVP:STATe CH3, #
:string:
On OFF ON

#cmdSetup checkbox OCP_state Ch_3
:read: OUTPut:OCP:STATe? CH3
:write: OUTPut:OCP:STATe CH3, #
:string:
On OFF ON

; ********** Channel SER ********  

#cmdSetup radio Volt SER
:enable: Output_Mode=="SER"
:read: APPLy? SER,VOLT
:readmath: getElement(value,1, ",")
:write: APPLY SER,#V
:tip: Shortcuts for common voltages
1.8V 1.8
3.3V 3.3
5V 5
12V 12
24V 24
30V 30
60V 60

#cmdSetup number Volt SER
:enable: Output_Mode=="SER"
:read: APPLy? SER,VOLT
:readmath: getElement(value,1, ",")
:write: APPLY SER,#V
V 0 SER_MaxVoltage

#cmdSetup number Current SER
:enable: Output_Mode=="SER"
:read: APPLy? SER,CURRENT
:readmath: getElement(value,1, ",")
:write: APPLY SER,#A
A 0 SER_MaxCurrent

#cmdSetup number OVP_value SER
:enable: Output_Mode=="SER"
:read: OUTPUT:OVP:VALUE? SER
:write: OUTPUT:OVP:VALUE SER,#
:tip: Over voltage protection
V 0 SER_MaxVoltage

#cmdSetup number OCP_value SER
:enable: Output_Mode=="SER"
:read: OUTPUT:OCP:VALUE? SER
:write:OUTPUT:OCP:VALUE SER,#
:tip: Over current protection
A 0 SER_MaxCurrent

#cmdSetup checkbox OVP_state SER
:enable: Output_Mode=="SER"
:read: OUTPut:OVP:STATe? SER
:write: OUTPut:OVP:STATe SER, #
:string:
On OFF ON

#cmdSetup checkbox OCP_state SER
:enable: Output_Mode=="SER"
:read: OUTPut:OCP:STATe? SER
:write: OUTPut:OCP:STATe SER, #
:string:
On OFF ON

; ********** Channel PAR ********  

#cmdSetup radio Volt PAR
:enable: Output_Mode=="PARA"
:read: APPLy? PARA,VOLT
:readmath: getElement(value,1, ",")
:write: APPLY PARA,#V
:tip: Shortcuts for common voltages
1.8V 1.8
3.3V 3.3
5V 5
12V 12
24V 24

#cmdSetup number Volt PAR
:enable: Output_Mode=="PARA"
:read: APPLy? PARA,VOLT
:readmath: getElement(value,1, ",")
:write: APPLY PARA,#V
V 0 PAR_MaxVoltage

#cmdSetup number Current PAR
:enable: Output_Mode=="PARA"
:read: APPLy? PARA,CURRENT
:readmath: getElement(value,1, ",")
:write: APPLY PARA,#A
A 0 PAR_MaxCurrent

#cmdSetup number OVP_value PAR
:enable: Output_Mode=="PARA"
:read: OUTPUT:OVP:VALUE? PARA
:write: OUTPUT:OVP:VALUE PARA,#
:tip: Over voltage protection
V 0 PAR_MaxVoltage

#cmdSetup number OCP_value PAR
:enable: Output_Mode=="PARA"
:read: OUTPUT:OCP:VALUE? PARA
:write:OUTPUT:OCP:VALUE PARA,#
:tip: Over current protection
A 0 PAR_MaxCurrent

#cmdSetup checkbox OVP_state PAR
:enable: Output_Mode=="PARA"
:read: OUTPut:OVP:STATe? PARA
:write: OUTPut:OVP:STATe PARA, #
:string:
On OFF ON

#cmdSetup checkbox OCP_state PAR
:enable: Output_Mode=="PARA"
:read: OUTPut:OCP:STATe? PARA
:write: OUTPut:OCP:STATe PARA, #
:string:
On OFF ON

; ********** Color setup ********  

#cmdSetup color - Ch_1
CH1_COLOR
:bgcolor: CH1_COLOR
#cmdSetup color - Ch_2
CH2_COLOR
:bgcolor: CH2_COLOR
#cmdSetup color - Ch_3
CH3_COLOR
:bgcolor: CH3_COLOR
#cmdSetup color - SER
SER_COLOR
:bgcolor: SER_COLOR
#cmdSetup color - PAR
PAR_COLOR
:bgcolor: PAR_COLOR


; ******************** generic interface ********************
;                               ________ SER
;                              |     ___ PARA
;                              |    |
#interfaceType PS:1 PS:2 PS:3 PS:4 PS:5

#interface setMode SOURCE:MODE (value)
#interface getMode SOURCE:MODE?
:string:

#interface setVoltage SOURCE CH(channel):VOLT (value)
#interface getVoltage SOURCE CH(channel):VOLT?
#interface readVoltage 0 5 10 15 20

#interface setCurrent SOURCE CH(channel):CURR (value)
#interface getCurrent SOURCE CH(channel):CURR?
#interface readCurrent 1 6 11 16 21

#interface readPower 2 7 12 17 22

#interface setOVP OUTPUT:OVP:VALUE CH(channel), (value) 
#interface getOVP OUTPUT:OVP:VALUE? CH(channel)
#interface setOVPstate OUTPUT:OVP:STATE CH(channel), (value)
#interface getOVPstate OUTPUT:OVP:STATE? CH(channel)
:string:

#interface setOCP OUTPUT:OCP:VALUE CH(channel), (value) 
#interface getOCP OUTPUT:OCP:VALUE? CH(channel)
#interface setOCPstate OUTPUT:OCP:STATE CH(channel), (value)
#interface getOCPstate OUTPUT:OCP:STATE? CH(channel)
:string:

#interface getCVCC OUTPUT:CVCC? CH(channel)
:string:

; XXX: this works for channels 1-3 but not SER or PARA:
#interface setOn OUTPUT:STATE CH(channel), (value)
#interface getOn OUTPUT:STATE? CH(channel)
:string:

; XXX: this *should* work for all channels but doesn't. :-(
;#interface setOn OUTPUT:STATE (getElement("CH1 CH1 CH2 CH3 SER PARA",channel," ")), (value)
;#interface getOn OUTPUT:STATE? (getElement("CH1 CH1 CH2 CH3 SER PARA",channel," "))
;:string:

