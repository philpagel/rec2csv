#! /bin/env python3
"""
Read a *.REC file created by a UNI-T UDP3305S power supply
and return the content in csv format
"""

import sys, binascii

def main():
    debug = 0   # set to 1 for further reverse engineering

    with open(sys.argv[1], "rb") as infile:
        # read stuff from the file header
        magic = int.from_bytes(infile.read(2))
        if magic != 0x1006:
            sys.exit("Magic number mismatch. Are you sure this is a *.REC file?")
        fileID = infile.read(58)
        infile.read(4) # skip over unknown data
        logperiod = int.from_bytes(infile.read(4), byteorder='little')
        infile.read(12) # skip over unknown data
        
        recordnumber = 0
        print("t,voltage.1,current.1,voltage.2,current.2,voltage.3,current.3,voltage.ser,current.ser,voltage.par,current.par")
        # read all data records
        while(True):
            rec = infile.read(44)
            if len(rec) == 0:
                break
            elif len(rec) != 44:
                sys.exit("incomplete record.")

            ret = [recordnumber*logperiod]
            # read channel readout data
            for i in range(5*2):
                num = rec[i*4:i*4+4]
                ret.append( int.from_bytes(num, byteorder='little') / 10000 )
            if debug:
                # Add CRC
                ret.append(hex(binascii.crc32(rec[:-2])))
                ret.append(hex(sum(rec[:-2])))
                # add the last 4 bytes in hex and binary for further reversing
                ret.append("".join([f"{i:02x}" for i in rec[-4:]]))
                ret.append(" ".join([f"{i:08b}" for i in rec[-4:]]))
            print(",".join([str(x) for x in ret])) 

            recordnumber += 1

if __name__ == "__main__":
    try: 
        main()
    except KeyboardInterrupt:
        pass
